version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:17
    container_name: software2_postgres
    environment:
      POSTGRES_DB: software2_DB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: openpg
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - software2_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d software2_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicación Django
  web:
    build: .
    container_name: software2_django
    command: sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=software2_DB
      - DB_USER=postgres
      - DB_PASSWORD=openpg
      - DB_PORT=5432
    networks:
      - software2_network

  # pgAdmin para gestión de BD (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: software2_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@software2.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - software2_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:

networks:
  software2_network:
    driver: bridge